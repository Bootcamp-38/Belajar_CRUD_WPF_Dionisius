<UserControl x:Class="Belajar_CRUD_WPF_Dionisius.UserControlTransactionItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Belajar_CRUD_WPF_Dionisius"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <Style x:Key="dataGridTbl" TargetType="DataGrid">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource chs1}"/>
        </Style>

        <!-- Header -->
        <Style x:Key="chs1" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,-29,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#333333"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#555555"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#555555"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid 
        VerticalAlignment="Center"
        Height="380"
        Margin="10 0 10 0">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel
            VerticalAlignment="Center"
            Grid.Column="0">

            <Grid Margin="80 0 10 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="0 0 10 0" Grid.Column="0" Text="ID" TextAlignment="Left" FontWeight="Bold"/>
                <TextBox Margin="0 0 10 0" Grid.Column="1" x:Name="textBoxId" Background="#eee"/>
            </Grid>

            <Grid Margin="80 30 10 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="0 0 10 0" Grid.Column="0" Text="Quantity" TextAlignment="Left" FontWeight="Bold"/>
                <TextBox 
                    Margin="0 0 10 0"
                    Grid.Column="1" x:Name="textBoxQuantity" Background="#eee"/>
            </Grid>

            <Grid Margin="80 20 10 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="0 0 10 0" Grid.Column="0" Text="Item Id" TextAlignment="Left" FontWeight="Bold"/>

                <ComboBox Margin="0 0 10 0" Grid.Column="1" x:Name="comboBoxItemId" Background="#eee" ItemsSource="{Binding Item}" DisplayMemberPath="Name" SelectedValuePath="Id" SelectionChanged="comboBoxItemId_SelectionChanged"></ComboBox>
            </Grid>

            <Grid Margin="80 20 10 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="4*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="0 0 10 0" Grid.Column="0" Text="Trans." TextAlignment="Left" FontWeight="Bold"/>

                <ComboBox Margin="1,0,9,0.4" Grid.Column="1" x:Name="comboBoxTransactionId" Background="#eee" ItemsSource="{Binding Transaction}" DisplayMemberPath="OrderDate" SelectedValuePath="Id" ItemStringFormat="dd/MM/yyyy" SelectionChanged="comboBoxTransId_SelectionChanged"></ComboBox>
            </Grid>

            <Grid Margin="62,40,7.6,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="btn_input" Click="ButtonInputClick" Grid.Column="0" Width="50" Height="50" VerticalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="Input" Width="50" Height="50"/>

                    <Button.ToolTip>
                        <ToolTip>
                            Input Data
                        </ToolTip>
                    </Button.ToolTip>

                </Button>

                <Button x:Name="btn_update" Click="ButtonUpdateClick" Grid.Column="1" Width="50" Height="50" VerticalAlignment="Center" Background="{x:Null}" BorderBrush="{x:Null}">
                    <materialDesign:PackIcon Kind="Update" Width="50" Height="50"/>
                    <Button.ToolTip>
                        <ToolTip>
                            Update Data
                        </ToolTip>
                    </Button.ToolTip>
                </Button>

            </Grid>

        </StackPanel>

        <DataGrid x:Name="TableTi" 
                  SelectionChanged="TableItem_SelectionChanged" 
                  IsReadOnly="True" 
                  AutoGenerateColumns="False" 
                  Grid.Column="1" 
                  Background="#EEE"
                  AlternatingRowBackground="LightGray"
                  BorderBrush="Beige"
                  BorderThickness="3"
                  VerticalAlignment="Top"
                  RowHeight="20"
                  GridLinesVisibility="Horizontal"
                  Style="{DynamicResource dataGridTbl}"
                  HorizontalContentAlignment="Center">

            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Quantity" Binding="{Binding Number}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Item" Binding="{Binding Item.Name}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Transaction" Binding="{Binding Transaction.OrderDate, StringFormat=\{0:dd/MM/yyyy\}}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Delete" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Click="ButtonDeleteClick">
                                <materialDesign:PackIcon Kind="Delete"/>
                                <Button.ToolTip>
                                    <ToolTip>
                                        Delete Data
                                    </ToolTip>
                                </Button.ToolTip>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button 
            Grid.Column="1" HorizontalAlignment="Left" Margin="335.4,-28,-20,0" VerticalAlignment="Top" Width="75" 
            Background="{x:Null}" BorderBrush="{x:Null}"
            x:Name="refresh_btn"    
            Click="refresh_btn_Click">
            <materialDesign:PackIcon Kind="Refresh" Width="20" Height="20" RenderTransformOrigin="1.413,-0.72"/>
        </Button>


    </Grid>
</UserControl>
